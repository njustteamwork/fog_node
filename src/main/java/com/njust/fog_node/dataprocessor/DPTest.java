package com.njust.fog_node.dataprocessor;

import com.google.gson.Gson;
import com.google.gson.reflect.TypeToken;
import com.njust.fog_node.mysql.SpringUtil;
import com.njust.fog_node.mysql.edf.EDFDao;
import com.njust.fog_node.mysql.edf.EDFDaoImpl;
import com.njust.fog_node.paillier.PaillierCalculator;
import com.njust.fog_node.paillier.PaillierPublicKey;
import java.text.ParseException;
import java.util.ArrayList;
import java.util.List;

public class DPTest {
    public static void main(String[] args) throws ParseException {
        //String gsonEData = "{\"date\":\"Jan 30, 2020 5:17:07 PM\",\"username\":\"Yang\",\"userTemperature\":18842935830974543526445953735128133691874835030899222742400864807246438800332014784948342629481558900121902003020096236021242424599991484096197750630206836243698572836655824391102100402738235866434758206413829107001622371559774159131206892361685345263542375573839758116945871718484546394892550424204918143007,\"userHeartRate\":18842935830974543526445953735128133691874835030899222742400864807246438800332014784948342629481558900121902003020096236021242424599991484096197750630206836243698572836655824391102100402738235866434758206413829107001622371559774159131206892361685345263542375573839758116945871718484546394892550424204918143007}";
        //EncryptedDataForm encryptedDataForm = EncryptedDataForm.jsonToEncryptedDataForm(gsonEData);
        //Gson gson = new Gson();
        //String gsonEData1 = gson.toJson(encryptedDataForm);
        //System.out.println(gsonEData1);

        //测试 构造数据

        PaillierPublicKey paillierPublicKey = PaillierPublicKey.paillierJsonToPublicKey("{\"n\":7037996759611275900405487329144489085210900622405788623915340046554895678557675360099993502545810105916795350348201798995744651664108236879690390748857833,\"nSquare\":49533398388298819693190911443085500113137594389227717398938303574532356291531019850234314622241175041250992063305927006862844026670633749958420794136365527887009273250901790502746504678689585917463571409706569379921923499464969602901871572009667889989146252127852333968575165007138552703354893437794045455889,\"g\":47,\"bitLength\":512,\"timeStamp\":1580452220178}");
        PaillierCalculator paillierCalculator = new PaillierCalculator(paillierPublicKey);

        /*
        SimpleDateFormat format = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss");

        Date date1 = format.parse("2019-12-11 15:30:20");
        EncryptedDataForm data1 = new EncryptedDataForm(date1,"Alice");
        data1.setUserHeartRate("111111111111111");
        data1.setUserTemperature("222222222222222");

        Date date2 = format.parse("2019-12-12 15:30:20");
        EncryptedDataForm data2 = new EncryptedDataForm(date2,"Chris");
        data2.setUserHeartRate("111111111111111");
        data2.setUserTemperature("222222222222222");

        Date date3 = format.parse("2019-12-13 15:30:20");
        EncryptedDataForm data3 = new EncryptedDataForm(date3,"Billy");
        data3.setUserHeartRate("111111111111111");
        data3.setUserTemperature("222222222222222");

        Date date4 = format.parse("2019-12-14 15:30:20");
        EncryptedDataForm data4 = new EncryptedDataForm(date4,"Emma");
        data4.setUserHeartRate("111111111111111");
        data4.setUserTemperature("222222222222222");

        Date date5 = format.parse("2019-12-15 15:30:20");
        EncryptedDataForm data5 = new EncryptedDataForm(date5,"Billy");
        data5.setUserHeartRate("111111111111111");
        data5.setUserTemperature("222222222222222");
        */

        //构造List
        List<EncryptedDataForm> eDataList;
        String eUsersData = "[{\"date\":\"Feb 12, 2020 2:34:08 PM\",\"username\":\"CCC\",\"userTemperature\":40317556205695153350380068550907349679010189665168111502835738410488388511104339568920163437222170595333827897098453650789088957165737540804124359840030622193353486763878415408438220212433666405269417106352431078090539696346998735318967030477679650040334595951104993497595279094553250984035381799305120519160,\"userHeartRate\":45075420391059100935982028592717333513071850683508211613820312753281608145446251018263890576619503607435434164999873780330092223358260029024405930721783492676711721425207714864392498234789492213159171474981271467414875467763799300671194742767224229736053584114442364922600049289312674426039019996348221525363},{\"date\":\"Feb 12, 2020 2:34:09 PM\",\"username\":\"CCC\",\"userTemperature\":40317556205695153350380068550907349679010189665168111502835738410488388511104339568920163437222170595333827897098453650789088957165737540804124359840030622193353486763878415408438220212433666405269417106352431078090539696346998735318967030477679650040334595951104993497595279094553250984035381799305120519160,\"userHeartRate\":38142026071227316877137063248123670362598017777321815094145949273876618591670964148561642966987317816923739096145133387274885377671603865893405390196471984551061430446887397511094220530143525485011060116443845011778360007369843809667546885653487418050375864008993124682045386297876484482928415441016502544723},{\"date\":\"Feb 12, 2020 2:34:10 PM\",\"username\":\"CCC\",\"userTemperature\":40317556205695153350380068550907349679010189665168111502835738410488388511104339568920163437222170595333827897098453650789088957165737540804124359840030622193353486763878415408438220212433666405269417106352431078090539696346998735318967030477679650040334595951104993497595279094553250984035381799305120519160,\"userHeartRate\":9472883368926384270569160710734502969153437521927483063080687189036247313418600373961893047721635910380023239807896954857227790422566698486904750325024269967553393971243224922554196483920604766831254723424217876393674365643753349907327033365864608758400531819992837187427215743206873376859361967189983189977},{\"date\":\"Feb 12, 2020 2:34:11 PM\",\"username\":\"CCC\",\"userTemperature\":40317556205695153350380068550907349679010189665168111502835738410488388511104339568920163437222170595333827897098453650789088957165737540804124359840030622193353486763878415408438220212433666405269417106352431078090539696346998735318967030477679650040334595951104993497595279094553250984035381799305120519160,\"userHeartRate\":48958331233149503171223261859837638645110808416769964773285869288444773398426058774334456264987487457853155764523740823386953936495564829217156912185216465378935330641217247338075197314751736701360400723285685151127307189536650622429397992118293491731654978516844676060477819873614627085550864955576846281807},{\"date\":\"Feb 12, 2020 2:34:12 PM\",\"username\":\"CCC\",\"userTemperature\":40317556205695153350380068550907349679010189665168111502835738410488388511104339568920163437222170595333827897098453650789088957165737540804124359840030622193353486763878415408438220212433666405269417106352431078090539696346998735318967030477679650040334595951104993497595279094553250984035381799305120519160,\"userHeartRate\":22505242096280943160711381030436011115878653683713343993273892128415960315597849282940971831317858621552686020543176383496009788442394475119018342432359590007533970595728261763195058573610672760614549147925010626574956932833977520695613317115071171887056392410492412287999943731514048666565554773585684274035},{\"date\":\"Feb 12, 2020 2:34:13 PM\",\"username\":\"BBB\",\"userTemperature\":40317556205695153350380068550907349679010189665168111502835738410488388511104339568920163437222170595333827897098453650789088957165737540804124359840030622193353486763878415408438220212433666405269417106352431078090539696346998735318967030477679650040334595951104993497595279094553250984035381799305120519160,\"userHeartRate\":17545012370929114996425768125697020070407240960745102306168554970370652710947499443305069004874679346705409636104822880192735496709231581467025417457224644726901879730290702312491154707220315482148810348637542470662582354432581811754522892205319388919579148608244364195918890231250680558128312164852206305976},{\"date\":\"Feb 12, 2020 2:34:13 PM\",\"username\":\"BBB\",\"userTemperature\":40317556205695153350380068550907349679010189665168111502835738410488388511104339568920163437222170595333827897098453650789088957165737540804124359840030622193353486763878415408438220212433666405269417106352431078090539696346998735318967030477679650040334595951104993497595279094553250984035381799305120519160,\"userHeartRate\":32081207220887289740956518818391941498938814927376330006909226414902976750036156231589209273251128635138379884031843259253063918603744329615461914307709855972239975309234360643140196380321452981576943830659386042390594666891831506032630781495325039393879950541847773710985200754565142978352376743348969086648},{\"date\":\"Feb 12, 2020 2:34:13 PM\",\"username\":\"BBB\",\"userTemperature\":40317556205695153350380068550907349679010189665168111502835738410488388511104339568920163437222170595333827897098453650789088957165737540804124359840030622193353486763878415408438220212433666405269417106352431078090539696346998735318967030477679650040334595951104993497595279094553250984035381799305120519160,\"userHeartRate\":21814787732738027029229041171856247055996469909855988356584534264469218505768747377663397175567794613974092650318822979008683374256970993174086148371397394085000642006961235145194089514420712610209217749794062594700244359966992696477499569990240151837970111631275345359049485250405138881914903803580183395786},{\"date\":\"Feb 12, 2020 2:34:13 PM\",\"username\":\"BBB\",\"userTemperature\":40317556205695153350380068550907349679010189665168111502835738410488388511104339568920163437222170595333827897098453650789088957165737540804124359840030622193353486763878415408438220212433666405269417106352431078090539696346998735318967030477679650040334595951104993497595279094553250984035381799305120519160,\"userHeartRate\":34627055672710876509946706215533609369082197978677104780707038939406143940510729745493374806862846031762513298866139876151238056664961680013633090728366964254844709309142241769192113603981774330561806046189554352473014929149264676405048349347929336601670204112894552503822506626270473382902610012387710484162},{\"date\":\"Feb 12, 2020 2:34:13 PM\",\"username\":\"AAA\",\"userTemperature\":40317556205695153350380068550907349679010189665168111502835738410488388511104339568920163437222170595333827897098453650789088957165737540804124359840030622193353486763878415408438220212433666405269417106352431078090539696346998735318967030477679650040334595951104993497595279094553250984035381799305120519160,\"userHeartRate\":42402868191848965785386025951343636726460284542536967927205115767053363875011662830690548010836162172806379020918909959497179809792918961971289851869550427593404593500828067064141189669076644177570599060298834408730149687136412498177382115043306340625819525214769280685252531206278562489066080572812938167166},{\"date\":\"Feb 12, 2020 2:34:13 PM\",\"username\":\"AAA\",\"userTemperature\":40317556205695153350380068550907349679010189665168111502835738410488388511104339568920163437222170595333827897098453650789088957165737540804124359840030622193353486763878415408438220212433666405269417106352431078090539696346998735318967030477679650040334595951104993497595279094553250984035381799305120519160,\"userHeartRate\":11598869484948604185506761989730921618129597930128796621108298070213850464307359033083171619652620471860131450951687821853689993441841214313791272414248981409644964502847531904775727299018839647275299445782442013440095316812603298262096526648682409847667599980062833463862366409550328851910049410446275621242},{\"date\":\"Feb 12, 2020 2:34:13 PM\",\"username\":\"AAA\",\"userTemperature\":40317556205695153350380068550907349679010189665168111502835738410488388511104339568920163437222170595333827897098453650789088957165737540804124359840030622193353486763878415408438220212433666405269417106352431078090539696346998735318967030477679650040334595951104993497595279094553250984035381799305120519160,\"userHeartRate\":279483521297380093717787643412814807577564434548549803768669980195052615604656202331605279020236723665265498364130551632145398389565823205561067969681319496211325873914303994247631588300018329839788445002511452543321396077689386397949460381726472959768425656577499147204406170341376302868494475240454183595},{\"date\":\"Feb 12, 2020 2:34:13 PM\",\"username\":\"AAA\",\"userTemperature\":40317556205695153350380068550907349679010189665168111502835738410488388511104339568920163437222170595333827897098453650789088957165737540804124359840030622193353486763878415408438220212433666405269417106352431078090539696346998735318967030477679650040334595951104993497595279094553250984035381799305120519160,\"userHeartRate\":13135725500976864404736019240402295956145528423781840777127489069167472933418841509585448113951126012267478423114135926710833724309593690661370194575022016321932316073972287729638684650100861502470056915118038269536105615651401160703624637941144229109116005859142459918607090006044686234819240336301346628965}]";
        Gson gson = new Gson();

        eDataList = gson.fromJson(eUsersData,new TypeToken<ArrayList<EncryptedDataForm>>(){}.getType());
        // for(EncryptedDataForm edf : eDataList) System.out.println(edf.getID());
        EDataAggregator test = new EDataAggregator();
        List<ResultData> resultDataList = test.eDataAggregator(eDataList,paillierCalculator);

    }


}
